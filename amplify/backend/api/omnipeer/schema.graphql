# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Storage @model @auth(rules: [{ allow: owner, operations: [create, read] }]){
  cid: String! @primaryKey
  name: String!
  type: String!
  size: Int!
}

enum StorageType {
  pending
  done
  cancelled
}

type Stream @model @auth(rules: [{ allow: owner, operations: [create, read, update] }]){
  ownerPeerId: String! @primaryKey
  remotePeerId: String!
  name: String!
  type: String!
  size: Int!
  status: StorageType!
  statusDetails: AWSJSON!
}

type User @model @auth(rules: [{ allow: owner, operations: [create, read, update] }]){
  owner: String! @primaryKey
  email: AWSEmail!
  peerId: String
  fullName: String
  about: String
  role: String
  nickname: String
  avatar: AWSURL
  contacts: [AWSJSON]
  chats: [Chat] @hasMany(indexName: "byOwner", fields: ["owner"])
}

type Chat @model @auth(rules: [{ allow: owner, operations: [create, read, update] }]){
  id: ID! @primaryKey
  userId: String! @index(name: "byOwner")
  unseenMsgs: Int!
  chat: [AWSJSON]
}

